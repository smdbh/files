{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Print to console": {
		"prefix": "cot",
		"body": [
			"std::cout<<\"$1\" $2 <<std::endl;",
		],
		"description": "Log output to console"
	},

	"Print to console2": {
		"prefix": "ff",
		"body": [
			"printf(\"$1\\n\"$2);",
		],
		"description": "Log output to console"
	},

	"Print Marco": {
		"prefix": "deflog",
		"body": [
			"#define LOGE(fmt, ...) printf(\"[$1-E]\" fmt, ##__VA_ARGS__)",
			"#ifdef DEBUG ",
			"#define LOGD(fmt, ...) printf(\"[$1-D]\" fmt, ##__VA_ARGS__)",
			"#else",
			"#define LOGD(fmt, ...)",
			"#endif",
			"$2\n",
		],
		"description": "Log marco level console"
	},

	"fori": {
		"prefix": "fori",
		"body": [
			"for(size_t $1 = 0; $1 < $2; $1++){",
			"\t$3",
			"}"
		],
		"description": "fori loop"
	},

	"ifdefcpp": {
		"prefix": "ifdefcpp",
		"body": [
			"#ifdef __cplusplus",
			"    extern \"C\" {",
			"#endif",
			"$1\n\n\n",
			"#ifdef __cplusplus",
			"}",
			"#endif",
		],
		"description": "ifdef cpp "
	},



	"comment to del": {
		"prefix": "rnt",
		"body": [
			"/*#rnt# $1 #*/",
		],
		"description": "a comment style can be delete by script"
	}




}